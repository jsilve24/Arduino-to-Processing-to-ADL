==How to Collect Data with Custom Spectrophotometer Apparatus==
:''In Lecomte Lab''
*Open Kinetics.exe (Desktop\Cary WinUV\Kinetics)
*Open SerialCallResponse_Thermistor.exe (Desktop\Justin Silverman\SerialCallResponse_Thermistor.exe)
*In SerialCallResponse_Thermistor.exe enter filename to save temperature readings to.(".dat" will be added to your entered filename, the file will be stored at Desktop\Justin Silverman\DATA)
*Press ''Enter'' to open file for writing and display begin scan. 
*In Kinetics.exe select ''View<math>\rightarrow</math>ADL<math>\rightarrow</math>ADL Hooks'' This is what tells the Kinetics Application to look for hooks labeled KN_XXXXX.adl in C:\Varian\ADL\
(Note: in our case there are two hook files, KN_prestage.adl and KN_postseq.adl)

==PolyNIPAM Custom Spectrophotometer Apparatus==
===Hardware===
The hardware was created to be an addition to to [http://www.chem.agilent.com/en-US/Products/instruments/molecularspectroscopy/uv-vis/systems/cary50/pages/default.aspx Agilent's Cary 50 Spectrophotometer] however it should system independent, requiring only a USB Port to power the Arduino and operate one end of a serial communication link.
[[Image:PolyNIPAM-Circuit_schem.png|thumb|Circuit Diagram/Schematic for Arduino Controlled Spectrophotometer Accessory]]
===Code===
====Sax Basic / ADL as part of Cary WinUV====
The software that runs the Cary 50, [http://www.chem.agilent.com/en-us/Products/software/spectroscopy/uv-vis/carywinuv/pages/default.aspx Cary WinUV] is based on [http://www.chemistry.nmsu.edu/studntres/chem435/Manuals/Cary_100/Cary_100_ADL/source/index.htm ADL] which is in turn based on  [http://ftgsoftware.com/manuals/basic32.pdf Sax Basic] a shitty version of Visual Basic that is far outdated. 
:From my understanding ADL is simply Sax Basic with some specific commands for interacting with the spectrophotometer.

With Respect to interprocess communication Sax Basic/ADL seems to only support a few odd/legacy options. 
*DDE (Dynamic Data Exchange)
*Clipboard: Copy and Paste
*SendKeys / AppActivate
*Shell (General Shell Execution Functionality)
====Adding ADL Hooks to Cary WinUV====
:''From [http://www.chemistry.nmsu.edu/studntres/chem435/Manuals/Cary_100/Cary_100_ADL/index.html?page=source/adlfunctions.htm HERE]''
*Hooks must be added to the directory ''C:\Varian\ADL\'' with the following format (very case sensitive):
 XX_<time to run>.adl

*XX is the 2 letter code for the application to add hooks into. (Kinetics etc.)
*<time to run> can take on a number of values: (Examples)
<pre>
online.adl
offline.adl
preseq.adl
postseq.adl
zero.adl
recalc.adl
preread.adl
postread.adl
PreScan.adl
PostScan.adl
shutdown.adl
</pre>
*Cary checks first if the file exists then runs it if the ADL Hooks menu item is checked.
'''For Example:'''  or SCAN the extent is always "SW". Therefore all scan hooks are "SW_" such as "SW_preseq.adl" is run when the Start key is pressed (pre-sequence).

====Processing====
;Interprocess Communication :
Originally I had played around with using [http://en.wikipedia.org/wiki/Dynamic_Data_Exchange DDE ] to have my processing sketch communicate with the Spectrophotometer's [http://www.chem.agilent.com/en-us/Products/software/spectroscopy/uv-vis/carywinuv/pages/default.aspx Cary WinUV] software. I found a few [ http://jdde.pretty-tools.com/ Java libraries that would support DDE] but most of them (except a ridiculously expensive one only supported operation as a DDE Client (the same as DDE from Cary WinUV)).

Ultimately I decided to simply use the windows clipboard to transfer data between the Cary WinUV software and Processing. This seemed to work quite well.
